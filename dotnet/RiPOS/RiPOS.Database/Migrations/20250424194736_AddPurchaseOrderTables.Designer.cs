// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RiPOS.Database;

#nullable disable

namespace RiPOS.Database.Migrations
{
    [DbContext(typeof(RiPosDbContext))]
    [Migration("20250424194736_AddPurchaseOrderTables")]
    partial class AddPurchaseOrderTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("RiPOS.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.CashRegister", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.HasIndex("StoreId");

                    b.ToTable("CashRegisters");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Color", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("RgbHex")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.CountryState", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.ToTable("CountryStates");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CountryStateId")
                        .HasColumnType("integer");

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Rfc")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.Property<string>("SecondSurname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Genders");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Inventory", b =>
                {
                    b.Property<int>("ProductDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("ProductDetailId", "StoreId");

                    b.HasIndex("StoreId");

                    b.ToTable("Inventories");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.InventoryTransfer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("FromStoreId")
                        .HasColumnType("integer");

                    b.Property<int>("ToStoreId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("TransferDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("FromStoreId");

                    b.HasIndex("ToStoreId");

                    b.HasIndex("UserId");

                    b.ToTable("InventoryTransfers");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.InventoryTransferDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("InventoryTransferId")
                        .HasColumnType("integer");

                    b.Property<int>("ProductDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("InventoryTransferId");

                    b.HasIndex("ProductDetailId");

                    b.ToTable("InventoryTransferDetails");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductCategory", b =>
                {
                    b.Property<int>("ProductHeaderId")
                        .HasColumnType("integer");

                    b.Property<int>("CategoryId")
                        .HasColumnType("integer");

                    b.HasKey("ProductHeaderId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("ProductCategories");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductColor", b =>
                {
                    b.Property<int>("ProductDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("ColorId")
                        .HasColumnType("integer");

                    b.HasKey("ProductDetailId", "ColorId");

                    b.HasIndex("ColorId");

                    b.ToTable("ProductColors");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AdditionalPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("ProductHeaderId")
                        .HasColumnType("integer");

                    b.Property<int>("SizeId")
                        .HasColumnType("integer");

                    b.Property<string>("VariantName")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.HasIndex("ProductHeaderId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductDetails");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductGender", b =>
                {
                    b.Property<int>("ProductHeaderId")
                        .HasColumnType("integer");

                    b.Property<int>("GenderId")
                        .HasColumnType("integer");

                    b.HasKey("ProductHeaderId", "GenderId");

                    b.HasIndex("GenderId");

                    b.ToTable("ProductGenders");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductHeader", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BasePrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("BrandId")
                        .HasColumnType("integer");

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("ProductHeaders");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("InvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime>("OrderDateTime")
                        .HasColumnType("timestamptz");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int>("VendorId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.HasIndex("StoreId");

                    b.HasIndex("VendorId", "InvoiceNumber")
                        .IsUnique();

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<int>("ProductDetailId")
                        .HasColumnType("integer");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("UnitCost")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.HasIndex("ProductDetailId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderDetails");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrderNote", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseOrderNotes");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrderStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("PurchaseOrderStatus");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshTokens");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Store", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("LogoPath")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Stores");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<string>("ProfileImagePath")
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("SecondSurname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.UserStoreRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("StoreId")
                        .HasColumnType("integer");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.HasKey("UserId", "StoreId", "RoleId");

                    b.HasIndex("RoleId");

                    b.HasIndex("StoreId");

                    b.ToTable("UserStoreRoles");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Vendor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<string>("City")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CountryStateId")
                        .HasColumnType("integer");

                    b.Property<int?>("CreationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<int?>("LastModificationByUserId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("LastModificationDateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamptz")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("MobilePhone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("SecondSurname")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("varchar(10)");

                    b.HasKey("Id");

                    b.HasIndex("CountryStateId");

                    b.HasIndex("CreationByUserId");

                    b.HasIndex("LastModificationByUserId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Brand", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.CashRegister", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Category", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Color", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Customer", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.CountryState", "CountryState")
                        .WithMany()
                        .HasForeignKey("CountryStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CountryState");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Gender", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Inventory", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.ProductDetail", "ProductDetail")
                        .WithMany()
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductDetail");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.InventoryTransfer", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.Store", "FromStore")
                        .WithMany()
                        .HasForeignKey("FromStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.Store", "ToStore")
                        .WithMany()
                        .HasForeignKey("ToStoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FromStore");

                    b.Navigation("ToStore");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.InventoryTransferDetail", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.InventoryTransfer", "InventoryTransfer")
                        .WithMany()
                        .HasForeignKey("InventoryTransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.ProductDetail", "ProductDetail")
                        .WithMany()
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryTransfer");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductCategory", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.ProductHeader", "ProductHeader")
                        .WithMany("ProductCategories")
                        .HasForeignKey("ProductHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("ProductHeader");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductColor", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.ProductDetail", "ProductDetail")
                        .WithMany("ProductColors")
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Color");

                    b.Navigation("ProductDetail");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductDetail", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.ProductHeader", "ProductHeader")
                        .WithMany("ProductDetails")
                        .HasForeignKey("ProductHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.Size", "Size")
                        .WithMany()
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");

                    b.Navigation("ProductHeader");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductGender", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.Gender", "Gender")
                        .WithMany()
                        .HasForeignKey("GenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.ProductHeader", "ProductHeader")
                        .WithMany("ProductGenders")
                        .HasForeignKey("ProductHeaderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gender");

                    b.Navigation("ProductHeader");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductHeader", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("Brand");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrder", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.Vendor", "Vendor")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");

                    b.Navigation("Store");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrderDetail", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.ProductDetail", "ProductDetail")
                        .WithMany()
                        .HasForeignKey("ProductDetailId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Details")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");

                    b.Navigation("ProductDetail");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrderNote", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.PurchaseOrder", "PurchaseOrder")
                        .WithMany("Notes")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");

                    b.Navigation("PurchaseOrder");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.RefreshToken", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Size", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Store", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.User", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.UserStoreRole", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.Store", "Store")
                        .WithMany()
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.User", "User")
                        .WithMany("UserStoreRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("Store");

                    b.Navigation("User");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Vendor", b =>
                {
                    b.HasOne("RiPOS.Domain.Entities.CountryState", "CountryState")
                        .WithMany()
                        .HasForeignKey("CountryStateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiPOS.Domain.Entities.User", "CreationByUser")
                        .WithMany()
                        .HasForeignKey("CreationByUserId");

                    b.HasOne("RiPOS.Domain.Entities.User", "LastModificationByUser")
                        .WithMany()
                        .HasForeignKey("LastModificationByUserId");

                    b.Navigation("CountryState");

                    b.Navigation("CreationByUser");

                    b.Navigation("LastModificationByUser");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductDetail", b =>
                {
                    b.Navigation("ProductColors");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.ProductHeader", b =>
                {
                    b.Navigation("ProductCategories");

                    b.Navigation("ProductDetails");

                    b.Navigation("ProductGenders");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.PurchaseOrder", b =>
                {
                    b.Navigation("Details");

                    b.Navigation("Notes");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.User", b =>
                {
                    b.Navigation("UserStoreRoles");
                });

            modelBuilder.Entity("RiPOS.Domain.Entities.Vendor", b =>
                {
                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
